<idea-plugin>
  <id>artsiomch.cmake.plus</id>
  <name>CMake Plus</name>
  <version>GRADLE.BUILD</version>
  <vendor email="achapialiou@gmail.com" url="http://github.com/ArtsiomCh/CMake">Artsiom Chapialiou</vendor>

  <product-descriptor code="PCMAKEPLUS" release-date="20190810" release-version="1921"/>

  <description><![CDATA[
     Extend CMake language support in the IDE's Editor:<br>
     - Variables navigation (Go to definition / Find usages) and renaming(*see Notes). <br>
     - User variables definition/reference completion added (no scopes, very little semantic checks yet). <br>
     - Folding regions for functions, macros, if/for/while blocks and: <br>
          &emsp; * Multiline brackets comments; <br>
          &emsp; * Consequent single-line comments;  <br>
          &emsp; * Multiline function's arguments. <br>
     - "Comment with Line / Block Comment" (`Ctrl + /` and `Shift + Ctrl + /`) actions added. <br>
     - Structure View (for the current file) with:  <br>
          &emsp; * Function/Macros declarations; <br>
          &emsp; * Variable (re)definitions; <br>
          &emsp; * Filtering by Functions, Macros, Variables and Sorting alphabetical; <br>
          &emsp; * Navigation in both directions (Structure View &lt;-> Editor). <br><br>

     <b>Require <a href="https://plugins.jetbrains.com/plugin/10089-cmake-simple-highlighter">CMake simple highlighter</a></b> to be installed! <br><br>

     Plugin is <b>paid</b> for commercial IDEs: IntelliJ IDEA Ultimate, CLion, etc. <br>
     Plugin is <b>free</b>(for now) for community/free IDEs: IntelliJ IDEA Community, Android Studio, etc. <br><br>

     <b>Plans for the future</b> [no commitments ;) ] functionality:<br>
     - Variable's scope of visibility. <br>
     - Performance optimisation for large projects. <br>
     - ENV variables navigation/renaming. <br>
     - function's declaration and references navigation/renaming. <br> <br>

     *Note: Variable's scope of visibility is not implemented yet, i.e. all variables withing Project are shown as global. Variable's rename refactoring (Shift+F6) works fine for variables with single declaration. For multi declared (re-defined, amended) variables rename refactoring works only from variable declaration side (i.e. caret should be on variable declaration, not reference) and will change all visible references and only current declaration. Use with caution. <br>
]]></description>

  <change-notes><![CDATA[
      192.5.1 - user variables definition/reference completion added (no scopes, very little semantic checks yet). <br>
      192.4.1 - Structure View added with: <br>
          &emsp; * Function/Macros declarations; <br>
          &emsp; * Variable (re)definitions; <br>
          &emsp; * Filtering by Functions, Macros, Variables and Sorting alphabetical; <br>
          &emsp; * Navigation in both directions (Structure View <-> Editor). <br>
      192.3.1 - "Comment with Line / Block Comment" (`Ctrl + /` and `Shift + Ctrl + /`) actions added. <br>
          &emsp; Folding regions for: <br>
          &emsp; * Multiline brackets comments; <br>
          &emsp; * Consequent single-line comments;  <br>
          &emsp; * Multiline function's arguments. <br>
      192.2.1 - Folding regions for functions, macros, if/for/while blocks. <br>
          &emsp; * Fix <a href="https://github.com/ArtsiomCh/CMake/issues/5">Exception</a> if space symbol in Path presented. <br>
      192.1.1 - Navigation (Go to definition / Find usages) for variable's (re)definitions/references. <br>
    ]]>
  </change-notes>

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
<!--  <idea-version since-build="192.0" until-build="194.0"/>-->

  <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends optional="true" config-file="clion.xml">com.intellij.modules.cidr.lang</depends>
  <depends optional="true" config-file="idea.xml">com.intellij.modules.java</depends>
  <depends>com.intellij.modules.clion</depends>
  <depends>com.intellij.modules.androidstudio</depends>
  <depends>com.intellij.modules.cmake</depends>
  -->
  <depends>com.intellij.modules.lang</depends>
  <depends>artsiomch.cmake</depends>

  <extensions defaultExtensionNs="com.intellij">
    <!--
    <lang.parserDefinition language="CMake"
                           factoryArgument="parserDefinition"
                           factoryClass="com.cmakeplugin.CMakePlusExtensionFactory"  />
    <lang.syntaxHighlighterFactory language="CMake"
                                   factoryArgument="syntaxHighlighterFactory"
                                   factoryClass="com.cmakeplugin.CMakePlusExtensionFactory"  />
    <lang.braceMatcher language="CMake"
                       factoryArgument="braceMatcher"
                       factoryClass="com.cmakeplugin.CMakePlusExtensionFactory"  />
     -->

    <psi.referenceContributor implementation="com.cmakeplugin.CMakeReferenceContributor" />
    <lang.findUsagesProvider language="CMake" implementationClass="com.cmakeplugin.CMakeFindUsagesProvider"  />
    <lang.foldingBuilder language="CMake" implementationClass="com.cmakeplugin.CMakeFoldingBuilderForMultiLineBodies"/>
    <lang.foldingBuilder language="CMake" implementationClass="com.cmakeplugin.CMakeFoldingBuilderForSubsequentSingleLineComments"/>
    <lang.commenter language="CMake" implementationClass="com.cmakeplugin.CMakeCommenter" />
    <lang.psiStructureViewFactory language="CMake" implementationClass="com.cmakeplugin.CMakeStructureViewFactory"/>
    <completion.contributor language="CMake" implementationClass="com.cmakeplugin.CMakeVariableCompletionContributor" order="first"/>

    <lang.refactoringSupport language="CMake"
                             factoryArgument="refactoringSupport"
                             factoryClass="com.cmakeplugin.CMakePlusExtensionFactory"  />
  </extensions>

  <application-components>
    <!-- Add your application components here -->
    <component>
      <implementation-class>com.cmakeplugin.CMakePlusComponent</implementation-class>
    </component>
  </application-components>

  <actions>
    <!-- Add your actions here -->
  </actions>

</idea-plugin>